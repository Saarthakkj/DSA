#include <bits/stdc++.h> 
bool isPossible(vector<int> &arr, int m , int mid){
    int d_c = 0;
    for (int i =0 ; i< arr.size() ; i++){
        for(int j=1 ; j<=m;j++){
            if(j*(j+1)*arr[i]/2 <= mid){
                d_c++;
            }
        }
        if(d_c>= m){
            return true;
        }
    }
    return false;
    
       
}
int minCookTime(vector<int> &rank, int m)
{
    // Write your code here
    int s= 0;
    sort(rank.begin() , rank.end());
    int e = (m * (m + 1) * (*std::prev(rank.end()))) / 2;
    
    int ans = -1;
    int mid = s +(e-s)/2;
    while(s<=e){
        
       
        //printf("\nmid : %d\n\n" , mid);
        if(isPossible(rank , m, mid)){

            ans = mid;
            //printf("\nans: %d\n" , ans);
            e = mid-1;
        }
        else{
            s = mid+1;
        }
        mid = s +(e-s)/2;
    }

    return ans;
}
