class Solution {
public:
    int reverse(int x) {
        // INT_MAX: 2147483647
        // INT_MIN: -2147483648


        // if(x < -pow(2.0 , 31.0) || x > pow(2.0 , 31.0) -1){
        //     return 0;
        // }
        //vector<int> arr ;
        int reversed = 0;
        // int size = 0;
        // int temp = x;
        // while(temp!=0 ){
        //     temp = temp/10;
        //     size++;
        // }
        //cout<< size ;
        // int i = 1;

        //while(x!=0){
            // if(size-i >=9 ){
            //     bool first = (reversed > 2147483647) ;
            //     bool second = (reversed < -2147483648);
            //     bool third = (x%10 >2 or x%10<=-3);
            //     if(third){
            //         return 0;
            //     }
            //     //cout<< "reversed : "<< reversed <<endl;
            //     if(first or second){
            //         cout<< reversed << " reversed>2147483647 " << first << "reversed <-2,147,483,648" <<second << endl; 
            //         return 0;
            //     }
            // }
        while(x!=0){
            // if(reversed ==0){
            //     cout<< " x is : " << x;
            // }
            int mod = x%10;
            if(reversed > 214748364 || (reversed ==214748364 && mod >7)){
               // cout<<"here 1";
                return 0;
            }
            if(reversed <-214748364 || (reversed == -214748364 && mod<-8 )){
                //cout<<"here 2";
                return 0;
            }
           // cout<< 'size is : '<< size;
            // if(reversed ==0){
            //     cout<< " x is : " << x;
            // }
            //cout<<"before reversed: " << reversed;
            reversed = 10*reversed +mod;
            //cout<< "reversed: "<< reversed ;
            //cout<< " reversed is : "<< reversed << endl;
            x/=10;
        } ;
        return reversed;

        // for(int i =0 ; i< arr.size() ; i++) {
        //     cout<< arr[i];
        // }
        //return 0;
        
        //return reversed;
    }
};
