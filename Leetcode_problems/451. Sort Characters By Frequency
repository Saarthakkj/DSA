class Solution {
    public:
        string frequencySort(string s) {
            //will not use map here but vector<pair<char , int>>

            vector<pair<char, int>> freq;
            for(int i =0 ; i<s.size() ; i++){
                char c = s[i];
                //cout<< "c is : "<< c<< endl;

                //checking whether the given char is already present in the freq vector
                auto temp = find_if(freq.begin() , freq.end() , [c] (const auto& element)
                {
                    return element.first == c;
                });

                if(temp != freq.end()){
                    temp->second ++;
                }else{
                    //otherwise introduce the pair inside the freq vector 
                    // with freq 1
                    freq.push_back(make_pair(s[i] , 1));
                }
            }

            string ans;

            //sort reverse freq based on "integer": 
            sort(freq.begin(), freq.end(), [](const auto& a, const auto& b) {
                return a.second > b.second;  // Reverse sort in descending order based on integer values
            });



            // for(auto it = freq.begin() ; it!= freq.end() ; ++it){
            //     cout<< "freq[i]-> first " << (*it).first << "freq[i]->second " << (*it).second << endl;
            // }

            for(int i =0 ; i< freq.size() ; i++)
            {
                //making this string
                int f = freq[i].second;
                while(f>0){
                    ans.push_back(freq[i].first);
                    f--;
                };
            };
            return ans;
        };
};
