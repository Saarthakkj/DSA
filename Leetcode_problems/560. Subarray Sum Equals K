class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        //tle: 
        // int count = 0;
        // int sum = 0;
        // for(int i = 0 ; i<nums.size() ; i++){
        //     sum = nums[i];
        //     if(sum ==k){
        //         count++;
        //         sum = 0;
        //     }
        //     if(sum >k){
        //     }
            // for(int j = i+1; j<nums.size() ; j++ ){
            //     sum+=nums[j];
            //     if(sum==k){
            //         count++;
            //     }
            // }
        //}


        //prefix sum: 
        map<int , int> mpp;
        mpp[0] = 1;
        int preSum = 0;
        int count = 0;

        for(int i =0 ; i< nums.size() ; i++)
        {
            preSum += nums[i];
            int remove = preSum - k ;
            count+=mpp[remove];
            mpp[preSum] +=1;
        }
        return count;
    }
};
