class MyQueue {
public:
    stack<int> s1;
    stack<int> s2;
    MyQueue() {
    }
    
    void push(int x) {
        cout<< "push :" << x;
        s1.push(x);
        stack<int> temp =  s1;
        cout<< "printing the s1: ";
        while(!temp.empty()){
            cout<< " "<< temp.top();
            temp.pop();
        }
        cout<< endl;
    }
    
    int pop() {
        stack<int> empty_stack;
        swap(s2 , empty_stack);

        while(!(s1.empty())){
            s2.push(s1.top());
            s1.pop();
        }
        int return_value = s2.top();

        //popped from the s2:
        s2.pop();

        //now fix the s1;
        while(!(s2.empty())){
            s1.push(s2.top());
            s2.pop();
        }
        cout<< "popping : "<< return_value;
        //fixed the s1
        return return_value;
    }
    
    int peek() {
        stack<int> empty_stack ;
        swap(s2 , empty_stack);

        stack<int> temp = s1;
        while(!(temp.empty())){
            s2.push(temp.top());
            temp.pop();
        }
        return s2.top();
    }
    
    bool empty() {
        return (s1.empty() and s2.empty());
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */
